name: Upload mod to NexusMods, Thunderstore
description: A GitHub Action to upload a mod to NexusMods, Thunderstore.
inputs:
  mod-id:
    description: 'The mod ID on NexusMods'
    required: true
  archive-file:
    description: 'The file to upload.'
    required: true
  file-name:
    description: 'The name of the file on NexusMods, Thunderstore'
    required: true
  version:
    description: 'The version of the uploaded file.'
    required: true
  category:
    description: 'The mod file category on NexusMods.'
    required: true
    default: 'Main'
  description:
    description: 'A description of the mod.'
    required: false
  game:
    description: 'The game the mod is for.'
    required: true
  namespace:
    description: 'The namespace of the mod on Thunderstore.'
    required: false
  tomlConfigPath:
    description: 'The path to the toml configuration file for Thunderstore.'
    required: false

  NEXUSMOD_API_KEY:
    description: 'The API key for your NexusMods account.'
    required: true
  NEXUSMOD_COOKIE_NEXUSID:
    description: 'The session cookie for your NexusMods account.'
    required: true
  NEXUSMOD_COOKIE_SID_DEVELOP:
    description: 'The session cookie for your NexusMods account.'
    required: true
  THUNDERSTORE_TOKEN:
    description: 'The token for your Thunderstore account.'
    required: true
  GITHUB_TOKEN:
    description: 'The token for your Thunderstore account.'
    required: true

runs:
  using: 'node12'
  main: 'index.js'

# runs:  
#   using: "composite"
#   steps:
#     - env:
#           NEXUSMOD_API_KEY: ${{ inputs.NEXUSMOD_API_KEY }}
#           NEXUSMOD_COOKIE_NEXUSID: ${{ inputs.NEXUSMOD_COOKIE_NEXUSID }}
#           NEXUSMOD_COOKIE_SID_DEVELOP: ${{ inputs.NEXUSMOD_COOKIE_SID_DEVELOP }}
#       run: |
#         # Install OdinPlus Mod Uploader
#         dotnet tool install -g Digitalroot.OdinPlusModUploader
#         wget https://github.com/thunderstore-io/thunderstore-cli/releases/download/0.1.7/tcli-0.1.7-linux-x64.tar.gz
#         tar -xf tcli-0.1.7-linux-x64.tar.gz
#         mv ./tcli-0.1.7-linux-x64/tcli tcli
#         # Get inputs
#         modId=${{ inputs.mod-id }}
#         archiveFile=${{ inputs.archive-file }}
#         fileName=${{ inputs.file-name }}
#         version=${{ inputs.version }}
#         category=${{ inputs.category }}
#         description="${{ inputs.description }}"
#         game=${{ inputs.game }}
#         namespace=${{ inputs.namespace }}
#         tomlConfigPath=${{ inputs.tomlConfigPath }}
#         # Set environment variables from repository secrets
#         apiKey=${{ inputs.NEXUSMOD_API_KEY }}
#         cookieNexusId=${{ inputs.NEXUSMOD_COOKIE_NEXUSID }}
#         cookieSidDevelop=${{ inputs.NEXUSMOD_COOKIE_SID_DEVELOP }}
#         thunderstore_token=${{ inputs.THUNDERSTORE_TOKEN }}
#         GITHUB_TOKEN=${{ inputs.GITHUB_TOKEN }}

#         # Upload mod to NexusMods
#         opmu nx check -k $apiKey -cnxid $cookieNexusId -csid $cookieSidDevelop
#         opmu nx upload $modId $archiveFile -f "$fileName-$version" -v $version -g $game -t $category -d "$description"

#         # Upload mod to Thunderstore
#         # Replace <mod-id>, <archive-file>, and <file-name> with the appropriate values
#         # The <version> and <description> parameters are optional
#         if [ -n "$tomlConfigPath" ]; then
#           ./tcli init --config-path $tomlConfigPath --package-version $version
#           ./tcli publish --config-path $tomlConfigPath --token $thunderstore_token
#         else
#           ./tcli init --package-name $fileName --package-namespace $namespace --package-version $version
#           ./tcli publish --token $thunderstore_token
#         fi

#         # Upload mod to ModVault
#         # Replace <mod-id>, <archive-file>, and <file-name> with the appropriate values
#         # The <version> and <description> parameters are optional
#         # opmu modvault upload $modId $archiveFile -f $fileName -v $version -d $description
#       shell: bash
